----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int mod=1e9+7;
#define int long long 
signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int t;cin>>t;
    while(t--){
        int n,m,k;cin>>n>>m>>k;
        int dp[n+1][k+1];
        memset(dp,0,sizeof(dp));
        dp[1][0]=m;
        for(int i=2;i<=n;i++){
            for(int j=0;j<=k;j++){
                dp[i][j]=dp[i-1][j];
                if(j){
                    dp[i][j]=(dp[i][j]+(dp[i-1][j-1]*(m-1))%mod)%mod;
                }
            }
        }
        cout<<dp[n][k]<<endl;
    }
    return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 1
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <bits/stdc++.h>
using namespace std;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define int long long

const int mod=1000000007;
int dp[2001][2001];

signed main() {
    IOS
    int t;
    cin >> t;
    while(t--) {
        int n, m, k;
        cin >> n >> m >> k;
        for(int i=0;i<=n;i++)
            for(int j=0;j<=k;j++)
                dp[i][j] = 0;
        dp[1][0] = m;
        for (int i = 2; i <= n; ++i) {
            for (int j =0; j <= k; ++j) {
                dp[i][j] = dp[i-1][j];
                if(j)
                    dp[i][j] = (dp[i][j] + (dp[i-1][j-1]*(m-1))%mod)%mod;
            }
        }
        cout << dp[n][k] << "\n";
    }
    return 0;
}
