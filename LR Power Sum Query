--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
int inf=1e9;
int mod=1e9+7;
inline ll power(ll a,ll b){
    int res=1;
    while(b){
        if(b&1){
            res=((a%mod)*(res%mod))%mod;
        }
        a=((a%mod)*(a%mod))%mod;
        b>>=1;
    }
    return res%mod;
}
int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll n,q,k;cin>>n>>q>>k;
    ll a[n+1],powk[n+1],prefixSum[n+1];
    powk[0]=1;prefixSum[0]=0;
    for(int i=1;i<=n;i++){cin>>a[i];}
    for(int i=1;i<=n;i++){powk[i]=((k%mod)*(powk[i-1]%mod))%mod;}
    for(int i=1;i<=n;i++){
        prefixSum[i]=((a[i]%mod)*(powk[i]%mod))%mod;
        if(prefixSum[i]<0)prefixSum[i]+=mod;
        if(i!=1) prefixSum[i]=((prefixSum[i]%mod)+(prefixSum[i-1]%mod))%mod;
        if(prefixSum[i]<0) prefixSum[i]+=mod;
    }
    while(q--){
        ll l,r;cin>>l>>r;
        ll ans=(prefixSum[r]-prefixSum[l-1])%mod;
        if(ans<0) ans+=mod;
        ans=ans*power(powk[l],mod-2);
        ans%=mod;
        if(ans<0) ans+=mod;
        cout<<ans<<endl;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 1
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
typedef long long ll;
ll power(ll x,ll y)
{
    ll res = 1;
    while(y)
    {
        if(y&1) 
            res = (res*x)%mod;
        y=y/2,x=(x*x)%mod;
    }
    return res%mod;
}
const int N = 1000001;
ll powerK[N];
ll arr[N];
ll prefixSum[N];
signed main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    ll n,q,k;
    cin>>n>>q>>k;
    powerK[0] = 1;
    for(int i=1;i<=n;i++)
        powerK[i] = k*powerK[i-1]%mod;
    for(int i=1;i<=n;i++){
        cin>>arr[i];
        arr[i] = arr[i]*powerK[i]%mod;
        if(arr[i]<0)
            arr[i]+=mod;
    }
    prefixSum[0] = 0;
    for(int i=1;i<=n;i++){
        prefixSum[i] = prefixSum[i-1]+arr[i];
        if(prefixSum[i]>=mod)
            prefixSum[i]-=mod;
    }
    while(q--){
        ll l,r;
        cin>>l>>r;
        ll ans = prefixSum[r]-prefixSum[l-1];
        if(ans<0)
            ans+=mod;
        ans = ans*power(powerK[l],mod-2)%mod;
        cout<<ans<<"\n";
    }
}
