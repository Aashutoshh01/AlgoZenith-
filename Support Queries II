--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    multiset<int> m1,m2;
    int Sum=0;
    int q,k;cin>>q>>k;
    while(q--){
        int a;cin>>a;
        if(a==1){
            int b;cin>>b;
            if((int)m1.size()<k){
                m1.insert(b);
                Sum+=b;
            }
            else if(b>*(m1.begin())){
                int temp;temp=*(m1.begin());
                m1.erase(temp);
                Sum-=temp;
                m1.insert(b);
                Sum+=b;
                m2.insert(temp);
            }
            else{
                m2.insert(b);
            }
        }
        else if(a==2){
            int b;cin>>b;
            if(m2.find(b)!=m2.end()){
                m2.erase(b);
            }
            else if(m1.find(b)!=m1.end()){
                Sum-=b;
                m1.erase(b);
                if((int)m2.size()>0){
                    int temp;temp=*(m2.rbegin());
                    m1.insert(temp);
                    m2.erase(temp);
                    Sum+=temp;
                }
            }
        }
        else if(a==3){
            char b;cin>>b;
            cout<<Sum<<endl;
        }
    }
    return 0;
    
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 1
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define LD long double

const int N = 200010;

int inf = 1e9;
int mod = 1e9 + 7;


class MyStructure {
private:
	multiset<int> M1, M2;
	ll sum;
	int K;

public:
	MyStructure(int K) : K(K), sum(0LL) {};

	void add(int x) {
		M1.insert(x);
		sum += x;
		if((int)M1.size() > K) {
			int y = *(M1.begin());
			M1.erase(M1.find(y));
			sum -= y;
			M2.insert(y);
		}
		return;
	}

	void remove(int x) {
		if(M2.find(x) != M2.end()) {
			M2.erase(M2.find(x));
		}
		else if(M1.find(x) != M1.end()) {
			sum -= x;
			M1.erase(M1.find(x));
			if(M2.empty()) return;
			int y = *(M2.rbegin());
			sum += y;
			M1.insert(y);
			M2.erase(M2.find(y));
		}
		return;
	}

	ll getSum() {
		return sum;
	}
};

signed main()
{
    //freopen("IN", "r", stdin);
    //freopen("OUT", "w", stdout);

    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int Q, K; cin >> Q >> K;

    MyStructure M(K);

    while(Q--) {
    	int t; cin >> t;
    	if(t == 1) {
    		int x; cin >> x;
    		M.add(x);
    	}
    	else if(t == 2) {
    		int x; cin >> x;
    		M.remove(x);
    	}
    	else if(t == 3) {
    		char c; cin >> c;
    		cout << M.getSum() << "\n";
    	}
    	else {
    		//asserting this condition never happens
    		assert(1 == 0);
    	}
    }

    return 0;
}
