-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
ios_base::sync_with_stdio(0);
cin.tie(0);cout.tie(0);
    int n,q;
    cin>>n>>q;
    int a[n];
    int p[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    sort(a,a+n);
    for(int i=0;i<n;i++){
        p[i]=a[i];
        if(i){
            p[i]+=p[i-1];
        }
    }
    for(int i=0;i<q;i++){
        int x;
        cin>>x;
        cout<<distance(p,upper_bound(p,p+n,x))<<endl;
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 1
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define LD long double

const int N = 100010;

int inf = 1e9;
int mod = 1e9 + 7;

signed main()
{
    //freopen("IN", "r", stdin);
    //freopen("OUT", "w", stdout);

    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int n, q; cin >> n >> q;
    ll A[n];
    for(int i = 0; i < n; i++) cin >> A[i];
    sort(A, A + n);
    for(int i = 1; i < n; i++)
        A[i] += A[i - 1];

    while(q--) {
        int m; cin >> m;
        int l = 0, r = n - 1;
        int ans = -1;
        while(l <= r) {
            int mid = (l + r) / 2;
            if(A[mid] <= m) {
                ans = mid;
                l = mid + 1;
            }
            else r = mid - 1;
        }
        cout << ans + 1 << "\n";
    }
    return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 2
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define LD long double

const int N = 100010;

int inf = 1e9;
int mod = 1e9 + 7;

signed main()
{
    //freopen("IN", "r", stdin);
    //freopen("OUT", "w", stdout);

    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int n, q; cin >> n >> q;
    ll A[n];
    for(int i = 0; i < n; i++) cin >> A[i];
    sort(A, A + n);
    for(int i = 1; i < n; i++)
        A[i] += A[i - 1];

    pair<int,int> query[q];
    for(int i = 0; i < q; i++) {
        cin >> query[i].first;
        query[i].second = i;
    }
    sort(query, query + q);

    int ans[q];
    int ptr = -1;

    for(int i = 0; i < q; i++) {
        int m = query[i].first;
        while(ptr + 1 < n && A[ptr + 1] <= m) {
            ptr++;
        }
        ans[query[i].second] = ptr + 1;
    }

    for(int i = 0; i < q; i++)
        cout << ans[i] << "\n";
    return 0;
}
