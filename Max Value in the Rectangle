-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int n,m,q;cin>>n>>m>>q;
    ll arr[n+1][m+1];ll p[n+1][m+1];
    memset(arr,0,sizeof(arr));
    memset(p,0,sizeof(p));
    while(q--){
        int x1,y1,x2,y2,c;cin>>x1>>y1>>x2>>y2>>c;
        arr[x1][y1]+=c;
        arr[x1][y2+1]-=c;
        arr[x2+1][y1]-=c;
        arr[x2+1][y2+1]+=c;
    }
    ll max=arr[1][1];ll count=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            p[i][j]=arr[i][j]+p[i-1][j]+p[i][j-1]-p[i-1][j-1];
            if(p[i][j]==max){count++;}
            else if(p[i][j]>max){
                max=p[i][j];
                count=1;
            }
        }
    }
    cout<<max<<" "<<count<<endl;
    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 1
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <bits/stdc++.h>
using namespace std;
const int N = 1e3 + 10;
long long p[N][N];
long long a[N][N];
void solve() {
  int n, m, q;
  cin >> n >> m >> q;
  while (q--) {
    int x1, y1, x2, y2, c;
    cin >> x1 >> y1 >> x2 >> y2 >> c;
    a[x1][y1] += c;
    a[x1][y2 + 1] -= c;
    a[x2 + 1][y1] -= c;
    a[x2 + 1][y2 + 1] += c;
  }

  long long max = a[1][1];
  long long count = 0;
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      p[i][j] = a[i][j] + p[i - 1][j] + p[i][j - 1] - p[i - 1][j - 1];
      if (p[i][j] == max) {
        count++;
      } else if (p[i][j] > max) {
        max = p[i][j];
        count = 1;
      }
    }
  }

  cout << max << " " << count << '\n';
}

signed main() { solve(); }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution 2
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
signed main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    ll n,m,q;
    cin>>n>>m>>q;
    ll arr[n+1][m+1];
    memset(arr,0,sizeof(arr));
    for(int i=0;i<q;i++){
        ll x1,y1,x2,y2,c;
        cin>>x1>>y1>>x2>>y2>>c;
        arr[x1][y1]+=c;
        if(x2<n and y2<m)
            arr[x2+1][y2+1]+=c;
        if(y2<m)
            arr[x1][y2+1]-=c;
        if(x2<n)
            arr[x2+1][y1]-=c;
    }

    for(int i=1;i<=n;i++){  // row wise prefix sum
        for(int j=2;j<=m;j++)
            arr[i][j]+=arr[i][j-1];
    }
    for(int i=1;i<=m;i++) // column wise prefix sum
        for(int j=2;j<=n;j++)
            arr[j][i]+=arr[j-1][i];
    ll ans = -1e18;  // minimum value possible is -Q*1e9 = -1e16
    int cnt = 0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(arr[i][j]>ans)
                ans = arr[i][j],cnt = 1;
            else if(arr[i][j]==ans)
                cnt++;
        }
    }
    cout<<ans<<" "<<cnt<<"\n";
}
